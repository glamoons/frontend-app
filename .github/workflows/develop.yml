name: ci-cd/develop

on:
  push:
    branches: ["develop"]

env:
  DOCKER_HUB_USERNAME: 242912
  DOCKER_HUB_REPOSITORY: 242912/next-app
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  SSH_HOST: 54.37.233.59
  SSH_PORT: 22
  SSH_USER: ubuntu
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Login to Docker Hub
        uses: docker/login-action@v4
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v4
      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./prod.Dockerfile
          push: true
          tags: ${{ env.DOCKER_HUB_REPOSITORY }}:latest
      - name: Upload deployment configuration
        uses: actions/upload-artifact@v4
        with:
          name: deployment-configuration
          path: deployment/dev/docker-compose-dev-web.yaml
          retention-days: 1
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download deployment configuration
        uses: actions/download-artifact@v4
        with:
          name: deployment-configuration
      - name: Deploy to VPS
        shell: bash
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

          scp -o StrictHostKeyChecking=no -P $SSH_PORT docker-compose-dev-web.yaml $SSH_USER@$SSH_HOST:docker-compose-dev-web.yaml
          ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST docker compose -f docker-compose-dev-web.yaml pull
          ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST docker compose -f docker-compose-dev-web.yaml up -d
          ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST docker image prune --all --force
